plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
}

sourceCompatibility = targetCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

if (!hasProperty('mainClass')) {
    ext.mainClass = 'by.radioegor146.Main'
}

if (!hasProperty('ide.eclipse')) {
    sourceSets.test.resources.srcDirs += file('test_data')
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile 'org.ow2.asm:asm:7.1'
    compile 'org.ow2.asm:asm-tree:7.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
}

jar {
    manifest.attributes("Main-Class": getProperty('mainClass'))
    from(configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude "META-INF/*"
        exclude "module-info.class"
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    onOutput { desc, event ->
        if (event.destination == org.gradle.api.tasks.testing.TestOutputEvent.Destination.StdErr)
            logger.lifecycle "${desc.name} [STDERR]: ${event.message.replaceAll("[\n\r]", "")}"
    }
}

if (hasProperty('ide.eclipse'))
processTestResources {
    from 'test_data'
}

