plugins {
    id 'com.github.johnrengelman.shadow' version '5.0.0'
    id 'java'
    id 'eclipse'
    id 'idea'
}

sourceCompatibility = targetCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

if (!hasProperty('mainClass')) {
    ext.mainClass = 'by.radioegor146.Main'
}

if (!hasProperty('ide.eclipse')) {
    sourceSets.test.resources.srcDirs += file('test_data')
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile 'org.ow2.asm:asm:7.1'
    compile 'org.ow2.asm:asm-tree:7.1'

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.8.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.2'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
}

shadowJar {
    classifier null
}

assemble.dependsOn(shadowJar)

jar {
    manifest.attributes("Main-Class": getProperty('mainClass'))
}

test {
    useJUnitPlatform()

    testLogging {
        events "started", "passed", "skipped", "failed"
    }

    beforeTest { descriptor ->
        if(System.getenv("CI")) {
            logger.lifecycle("travis_fold:start:${descriptor.name}")
        }
    }
    
    afterTest { descriptor ->
        if(System.getenv("CI")) {
            logger.lifecycle("travis_fold:end:${descriptor.name}")
        }
    }

    onOutput { descriptor, event ->
        logger.lifecycle "${descriptor.name} ${event.message.replaceAll("[\n\r]", "")}"
    }
}

if (hasProperty('ide.eclipse'))
processTestResources {
    from 'test_data'
}

